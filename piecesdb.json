{"assets":[{"title":"Middleware assignments -","id":"47e3fc04-c244-45cc-b76f-13215826a90a","type":"CODE","raw":"//  Create a middleware that logs all incoming requests to the console.\n\nconst express = require('express');\nconst app = express();\n\nfunction logRequests(req, res, next) {\n    // write the logic for request log here\n\n    const log = `${req.method} ${req.url} - ${new Date().toISOString()}`;\n    console.log(log);\n    next();\n}\n\napp.use(logRequests);\n\napp.get('/', (req, res) => {\n    res.status(200).json({ message: 'Hello, world!' });\n});\n\nmodule.exports = app;\n","language":"js","time":"a minute ago","created":"2024-10-20T05:23:14.735Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"d5d29e91-0745-4b2f-8877-288fac8d6e14","created":{"value":"2024-10-20T05:23:15.229Z","readable":"a minute ago"},"updated":{"value":"2024-10-20T05:23:15.229Z","readable":"a minute ago"},"mechanism":"AUTOMATIC","asset":{"id":"47e3fc04-c244-45cc-b76f-13215826a90a"},"type":"DESCRIPTION","text":"This code snippet sets up a middleware that logs incoming requests to the console. It also defines an Express server that logs all incoming requests and sends them as JSON messages using `logRequests`. The app is then used for handling HTTP GET requests,","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e53f5395-c387-44a2-9c33-0a660b7e3b53","created":{"value":"2024-10-20T05:24:18.256Z","readable":"a moment ago"},"updated":{"value":"2024-10-20T05:24:18.256Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"47e3fc04-c244-45cc-b76f-13215826a90a"},"type":"DESCRIPTION","text":"This JavaScript code demonstrates an Express.js middleware function that intercepts and logs incoming HTTP requests to the console. The log includes the request method, URL, and timestamp.","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}}],"updated":"2024-10-20T05:24:18.263Z"},{"title":"Middleware assignments -","id":"f76fa126-adee-445b-bb56-f0433ef42a54","type":"CODE","raw":"//  Implement an authentication middleware that checks for a valid API key in the request headers.\n\nconst express = require('express');\nconst app = express();\nconst VALID_API_KEY = '100xdevs_cohort3_super_secret_valid_api_key'; // key is 100xdevs-api-key use that API key for authenticate user\n\n\n// Middleware to check for a valid API key\nfunction authenticateAPIKey(req, res, next) {\n    //  authenticate APIKey here\n    if(req.headers[\"100xdevs-api-key\"] && req.headers[\"100xdevs-api-key\"] === VALID_API_KEY) {\n        next();\n    }\n    else {\n        res.status(401).send({message:\"Invalid or missing API key\"});\n    }\n}\n\napp.use(authenticateAPIKey);\n\napp.get('/', (req, res) => {\n    res.status(200).json({ message: 'Access granted' });\n});\n\nmodule.exports = app; \n","language":"js","time":"a moment ago","created":"2024-10-20T05:23:11.366Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4d98d8e1-ae7e-4f98-87df-f69555f66c5d","created":{"value":"2024-10-20T05:23:11.811Z","readable":"a moment ago"},"updated":{"value":"2024-10-20T05:23:11.811Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"f76fa126-adee-445b-bb56-f0433ef42a54"},"type":"DESCRIPTION","text":"This code snippet sets up an Express middleware that checks for a valid API key in the request headers. It uses express to authenticate user's authentication and returns it if successful, or false otherwise is returned.","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}}],"updated":"2024-10-20T05:23:11.812Z"},{"title":"Middleware assignments -","id":"a7ea998c-9245-44ba-acca-573758f6fe7e","type":"CODE","raw":"// You have to create a middleware for rate limiting a users request based on their username passed in the header\n\nconst express = require('express');\nconst app = express();\n\n// Your task is to create a global middleware (app.use) which will\n// rate limit the requests from a user to only 5 request per second\n// If a user sends more than 5 requests in a single second, the server\n// should block them with a 404.\n// User will be sending in their user id in the header as 'user-id'\n// You have been given a numberOfRequestsForUser object to start off with which\n// clears every one second\n\napp.use(function(req,res, next) {\n  const user = req.headers[\"user-id\"];\n  if(numberOfRequestsForUser[user]){\n    numberOfRequestsForUser[user] = numberOfRequestsForUser[user] + 1;\n  }\n\n  if(numberOfRequestsForUser[user] > 5) {\n    res.status(404).send(\"too many requests\");\n  }\n  else {\n    next();\n  }\n});\n\nlet numberOfRequestsForUser = {};\nsetInterval(() => {\n    numberOfRequestsForUser = {};\n}, 1000)\n\napp.get('/user', function(req, res) {\n  res.status(200).json({ name: 'john' });\n});\n\napp.post('/user', function(req, res) {\n  res.status(200).json({ msg: 'created dummy user' });\n});\n\nmodule.exports = app;\n","language":"js","time":"a moment ago","created":"2024-10-20T05:23:05.043Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7752a29c-377e-414a-9044-b4bc8c581c2f","created":{"value":"2024-10-20T05:23:05.697Z","readable":"a moment ago"},"updated":{"value":"2024-10-20T05:23:05.697Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"a7ea998c-9245-44ba-acca-573758f6fe7e"},"type":"DESCRIPTION","text":"This code snippet creates a middleware for rate limiting users requests from a user to only 5 request per second. It checks if the number of requests are available, and then sends more than 5 requests in each second","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e69b2699-3997-4566-b6ce-325426b30694","created":{"value":"2024-10-20T05:23:14.086Z","readable":"a moment ago"},"updated":{"value":"2024-10-20T05:23:14.086Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"a7ea998c-9245-44ba-acca-573758f6fe7e"},"type":"DESCRIPTION","text":"This code implements a rate limiting middleware in Express.js to limit user requests to 5 per second based on their username passed in the header.","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}}],"updated":"2024-10-20T05:23:14.096Z"},{"title":"Node.js Project Setup and Execution in Docker Container","id":"4f15bf54-6519-4d16-9d92-6927ca4a9e5f","type":"CODE","raw":"FROM node:20\n\n# Install git\nRUN apt-get update && apt-get install -y git\n\nWORKDIR /home/app\n\nCOPY main.sh main.sh\nCOPY script.js script.js\nCOPY package*.json .\n\nRUN npm install\n\nRUN chmod +x main.sh\nRUN chmod +x script.js\n\nENTRYPOINT [ \"/home/app/main.sh\" ]","language":"sh","time":"a moment ago","created":"2024-10-07T19:55:21.505Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"dfd6a1ff-d904-498c-81c4-e61404c10b85","created":{"value":"2024-10-07T19:55:21.956Z","readable":"a moment ago"},"updated":{"value":"2024-10-07T19:55:21.956Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"4f15bf54-6519-4d16-9d92-6927ca4a9e5f"},"type":"DESCRIPTION","text":"This code snippet installs a git repository, copies the main.sh script and package files from it, adds them to an entry point for each file in Node.js directory using npm installing or changing its contents with their respective paths","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"bfc0cbfc-d81d-40e6-b8ac-10ca15f108ab","created":{"value":"2024-10-07T19:55:27.727Z","readable":"a moment ago"},"updated":{"value":"2024-10-07T19:55:27.727Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"4f15bf54-6519-4d16-9d92-6927ca4a9e5f"},"type":"DESCRIPTION","text":"Sets up a Docker container for a Node.js project, installing dependencies and defining an entry point script.","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}}],"updated":"2024-10-07T19:55:27.736Z"},{"title":"JWT Auth middleware blueprint","id":"77cd8f6d-1743-4761-959a-ded1b884ee23","type":"CODE","raw":"const jwt = require('jsonwebtoken');\nconst SECRET = process.env.SECRET || 'secret000'; \n\nconst authenticateJwt = (req, res, next) => {\n  const authHeader = req.headers.authorization;\n  if (authHeader) {\n    const token = authHeader.split(' ')[1];\n    jwt.verify(token, SECRET, (err, user) => {\n      if (err) {\n        return res.status(403).json({ message: 'Forbidden: Invalid token' });\n      }\n      req.userId = user.userId;\n      next();\n    });\n  } else {\n    res.status(401).json({ message: 'Unauthorized: No token provided' });\n  }\n};\n\nmodule.exports = {\n  authenticateJwt,\n  SECRET,\n};\n","language":"js","time":"a moment ago","created":"2024-10-22T21:46:30.101Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4c1ea8ba-b929-44b8-a5b3-6bad6d112ede","created":{"value":"2024-10-22T21:46:30.552Z","readable":"a moment ago"},"updated":{"value":"2024-10-22T21:46:30.552Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"77cd8f6d-1743-4761-959a-ded1b884ee23"},"type":"DESCRIPTION","text":"This code snippet exports a function called \"authenticateJwt\" that takes in an authentication header. It checks if the authorization header is valid and verifies it using JWT's verify method, updates the user ID of the request to authenticate","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"9d92eb5f-0b52-41bc-9678-5caf8efaa23d","created":{"value":"2024-10-22T21:46:47.670Z","readable":"a moment ago"},"updated":{"value":"2024-10-22T21:46:47.670Z","readable":"a moment ago"},"mechanism":"AUTOMATIC","asset":{"id":"77cd8f6d-1743-4761-959a-ded1b884ee23"},"type":"DESCRIPTION","text":"Verifies JSON Web Tokens (JWT) from the 'Authorization' header in an HTTP request to authenticate users. Returns a 401 Unauthorized response if no token is provided, and a 403 Forbidden response if the token is invalid.","model":{"id":"1cdb9efc-407f-49af-ba5c-df7c8d9e81c0"}}],"updated":"2024-10-22T21:46:47.677Z"}],"gptContexts":[],"gptFolderNames":[],"enrichedCode":{},"migration":1,"remoteCopilotState":"{\"context\":{\"conversations\":{},\"global\":{\"websites\":[],\"anchors\":[]}},\"aesthetics\":{\"global\":{\"userColor\":null,\"systemColor\":null}},\"runtime\":{\"global\":{\"selected\":\"GPT-4o\",\"downloads\":{\"Llama 2 7B\":{\"status\":\"UNKNOWN\",\"counter\":1},\"PaLM 2 Code Chat Bison\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Gemma 1.1 2B\":{\"status\":\"UNKNOWN\",\"counter\":1},\"PaLM 2 Chat Bison\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Claude 3 Sonnet\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Phi-3 Mini 4K\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Gemma 1.1 7B\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Claude 3 Haiku\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Claude 3 Opus\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Phi-2\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Gemini 1.5 Pro\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Granite 8B\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Claude 3.5 Sonnet\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Code Gemma 1.1 7B\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Llama 3 8B\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Phi-3 Mini 128K\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Granite 3B\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Gemini 1.5 Flash\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Gemini\":{\"status\":\"UNKNOWN\",\"counter\":1},\"Mistral 7B\":{\"status\":\"UNKNOWN\",\"counter\":1}},\"defaults\":{\"cloud\":null,\"local\":null}}},\"pipelines\":{\"global\":{\"standard\":\"generalizedCodeDialog\"}}}"}